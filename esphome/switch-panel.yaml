# Flip Panel 23.04-working
# Voidbox Industries & Chloe Madison
# VDBX.io / @clomads
# CC-BY-SA 4.0

substitutions:
  name: "flip-panel"
  fname: "Flip Panel"
  project_name: "vdbxio.flip panel"
  project_version: "0.9.0"
  speed: 1s
  idle_verb: "Idle"

### BEGIN ESPHOME ###
esphome:
  name: ${name}
  friendly_name: ${fname}
  name_add_mac_suffix: false
  project:
    name: "${project_name}"
    version: "${project_version}"
  on_boot:
    then:
      - text_sensor.template.publish:
          id: switch_1_state
          state: ${idle_verb}

esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: arduino

# Enable logging
logger:

api:

ota:

wifi:
  ap:
    password: "GenericPassword"

captive_portal:

web_server:
  local: True

esp32_improv:
  authorizer: none

wled:

# improv_serial:
#   next_url: http://vdbx.io

# DASHBOARD IMPORT FOR ESPHOME CONFIG
# dashboard_import:
#   package_import_url: github://vdbxio/pwrtools/pt500/pwrtool500.yaml@main
#   import_full_config: true

time:
  - platform: sntp

sensor:
  - platform: internal_temperature
    name: "ESP32-C3 Temperature"

button:
  - platform: restart
    name: ${fname} Restart
  - platform: factory_reset
    name: Restart with Factory Default Settings
    disabled_by_default: True

light:
  - platform: status_led
    name: "Status LED"
    pin: 10
  - platform: neopixelbus
    type: GRB
    variant: WS2811
    pin: 8
    restore_mode: RESTORE_AND_OFF
    num_leds: 1
    name: "RGB LEDs"
    effects:
      - pulse:
      - pulse:
          name: "Fast Pulse"
          transition_length: 0.5s
          update_interval: 0.5s
      - pulse:
          name: "Slow Pulse"
          transition_length: 2s
          update_interval: 2s
      - strobe:
      - strobe:
          name: Strobe Custom
          colors:
            - state: true
              brightness: 100%
              red: 100%
              green: 90%
              blue: 0%
              duration: 500ms
            - state: false
              duration: 250ms
            - state: true
              brightness: 100%
              red: 0%
              green: 100%
              blue: 0%
              duration: 500ms
      - flicker:
      - addressable_rainbow:
      - addressable_rainbow:
          name: "Rainbow Slow"
          speed: 1
          width: 1
      - addressable_color_wipe:
      - addressable_color_wipe:
          name: Color Wipe Custom
          colors:
            - red: 100%
              green: 100%
              blue: 100%
              num_leds: 1
            - red: 0%
              green: 0%
              blue: 0%
              num_leds: 1
          add_led_interval: 100ms
          reverse: false
      - wled:
          # port: 21324

i2c:
  sda: 3
  scl: 2
  scan: True
  id: bus_a
  frequency: 100k

pcf8574:
  - id: 'pcf_switches'
    address: 0x20
    pcf8575: False

globals:
  - id: counter
    type: int
    restore_value: no
    initial_value: '0'

binary_sensor: 
  -  !include {file: "/inlcude/multiclick.yaml", vars: {num: 1, ltr: a, pin: 0 }}
  -  !include {file: "/inlcude/multiclick.yaml", vars: {num: 1, ltr: b, pin: 1 }}
  -  !include {file: "/inlcude/multiclick.yaml", vars: {num: 2, ltr: a, pin: 2 }}
  -  !include {file: "/inlcude/multiclick.yaml", vars: {num: 2, ltr: b, pin: 3 }}
  -  !include {file: "/inlcude/multiclick.yaml", vars: {num: 3, ltr: b, pin: 4 }}
  -  !include {file: "/inlcude/multiclick.yaml", vars: {num: 3, ltr: a, pin: 5 }}
  -  !include {file: "/inlcude/multiclick.yaml", vars: {num: 4, ltr: b, pin: 6 }}
  -  !include {file: "/inlcude/multiclick.yaml", vars: {num: 4, ltr: a, pin: 7 }}
  
text_sensor:
  - platform: template
    name: "Switch 1"
    id: switch_1_state
    icon: mdi:toggle-switch-variant-off
  - platform: template
    name: "Switch 2"
    id: switch_2_state
    icon: mdi:toggle-switch-variant-off
  - platform: template
    name: "Switch 3"
    id: switch_3_state
    icon: mdi:toggle-switch-variant-off
  - platform: template
    name: "Switch 4"
    id: switch_4_state
    icon: mdi:toggle-switch-variant-off
  - platform: template
    id: rot_txt_a
    filters:
      - map:
        - 0 -> Down
        - 90 -> Left
        - 180 -> Up
        - 270 -> Right
  - platform: template
    id: rot_txt_b
    filters:
      - map:
        - 0 -> Up
        - 90 -> Right
        - 180 -> Down
        - 270 -> Left


select:
  - platform: template
    name: "Switch 1"
    id: switch_1
    optimistic: true
    options:
      - Idle
      - Up
      - Down
      - Left
      - Right
      - Double Up
      - Double Down
      - Double Left
      - Double Right
      - Hold Up
      - Hold Down
      - Hold Left
      - Hold Right
    initial_option: Idle
  - platform: template
    name: "Switch 2"
    id: switch_2
    optimistic: true
    options:
      - Idle
      - Up
      - Down
      - Left
      - Right
      - Double Up
      - Double Down
      - Double Left
      - Double Right
      - Hold Up
      - Hold Down
      - Hold Left
      - Hold Right
    initial_option: Idle
  - platform: template
    name: "Switch 3"
    id: switch_3
    optimistic: true
    options:
      - Idle
      - Up
      - Down
      - Left
      - Right
      - Double Up
      - Double Down
      - Double Left
      - Double Right
      - Hold Up
      - Hold Down
      - Hold Left
      - Hold Right
    initial_option: Idle
  - platform: template
    name: "Switch 4"
    id: switch_4
    optimistic: true
    options:
      - Idle
      - Up
      - Down
      - Left
      - Right
      - Double Up
      - Double Down
      - Double Left
      - Double Right
      - Hold Up
      - Hold Down
      - Hold Left
      - Hold Right
    initial_option: Idle
  - platform: template
    id: rotation_select
    name: "Rotation"
    optimistic: true
    icon: mdi:phone-rotate-landscape
    restore_value: True
    entity_category: config
    options:
      - '0'
      - '90'
      - '180'
      - '270'
    initial_option: '0'
    on_value:
      then:
        - text_sensor.template.publish:
            id: rot_txt_a
            state: !lambda 'return x;'
        - text_sensor.template.publish:
            id: rot_txt_b
            state: !lambda 'return x;'